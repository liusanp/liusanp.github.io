<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>资料 on 代码文思</title>
    <link>/categories/%E8%B5%84%E6%96%99/</link>
    <description>Recent content in 资料 on 代码文思</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>By liusanp.</copyright>
    <lastBuildDate>Sun, 10 Jul 2022 17:28:13 +0800</lastBuildDate><atom:link href="/categories/%E8%B5%84%E6%96%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Anaconda3</title>
      <link>/post/anaconda3/</link>
      <pubDate>Sun, 10 Jul 2022 17:28:13 +0800</pubDate>
      
      <guid>/post/anaconda3/</guid>
      <description># 不自启动base，linux环境安装完成后会自动启动默认base环境 conda config --set auto_activate_base false # 切换环境 conda activate 环境名 # 创建一个名为test的环境并指定python版本为3(的最新版本)，也可指定详细python版本 conda create -n test python=3 conda create -n test python=3.7 # 复制环境 conda create -n 新环境名 --clone 旧环境名 # 列出conda管理的所有环境 conda env list # 列出当前环境的所有包 conda list # 安装python包时要先切换到具体环境 # conda方式安装python包 -i 指定源 conda install requests # pip方式安装python包 -i 指定源 -r 指定requirements.txt pip install requests # conda方式卸载requets包 conda remove requests # pip方式卸载requets包 conda remove requests # 删除test环境及下属所有包 conda remove -n test --all # 更新requests包 conda update requests # 导出当前环境的包信息 conda env export &amp;gt; environment.</description>
    </item>
    
    <item>
      <title>ES深度分页</title>
      <link>/post/es%E6%B7%B1%E5%BA%A6%E5%88%86%E9%A1%B5/</link>
      <pubDate>Sun, 26 Jun 2022 11:59:58 +0800</pubDate>
      
      <guid>/post/es%E6%B7%B1%E5%BA%A6%E5%88%86%E9%A1%B5/</guid>
      <description>ES分页查询有三种情况：
from + size 从各分片查询（from + size）条，合并后取（from - size）条 注：（from+size）不能超过 max_result_window，默认10000条
scroll 不适合实时查询，用于查询大批量数据遍历，游标过期会报错 所有结果缓存，类似查询时间点快照，用游标遍历 不能聚合，只有最初的查询有聚合结果 最佳排序是 _doc 入库时间 返回结果最大条数是size * 分片数
search_after 正常查询后，将前一次查询的最后一条数据的sort放置在search_after字段查询 实时查询，排序可能会变更，并行滚动多个查询 只能一页页下翻</description>
    </item>
    
    <item>
      <title>GIS地理信息系统</title>
      <link>/post/gis%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 25 Jun 2022 21:43:25 +0800</pubDate>
      
      <guid>/post/gis%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/</guid>
      <description>GIS基础知识 前后端都要懂一点的 GIS：前后端都要懂一点的 GIS · 语雀
GIS历史概述与WebGis应用开发技术浅解：GIS历史概述与WebGis应用开发技术浅解 - 腾讯云开发者社区-腾讯云
OGC，开放地理空间信息联盟：https://www.ogc.org/﻿ OGC电子学习 — OGC e-Learning 2.0.0 文档
GeoServer 用于共享地理空间数据的开源服务器。GeoServer 是 OpenGIS Web 服务器规范的 J2EE 实现，利用 GeoServer 可以方便的发布地图数据，允许用户对特征数据进行更新、删除、插入操作，通过 GeoServer 可以比较容易的在用户之间迅速共享空间地理信息。
官网：https://geoserver.org/
用户手册：GeoServer 用户手册 — GeoServer 2.20.x 用户手册
基础教程：GeoServer 基础教程（一）：环境搭建篇 | Ethan&#39;s Blog - 记录和思考
OpenLayers OpenLayers是一个专为Web GIS客户端开发提供的JavaScript 类库包，用于实现标准格式发布的地图数据访问。OpenLayers 支持Open GIS 协会制定的WMS（Web Mapping Service）和WFS（Web Feature Service）等网络服务规范，可以通过远程服务的方式，将以OGC 服务形式发布的地图数据加载到基于浏览器的OpenLayers 客户端中进行显示。
官网：https://openlayers.org/
快速开始：https://openlayers.org/en/latest/doc/quickstart.html</description>
    </item>
    
  </channel>
</rss>
